apply plugin: 'com.android.application'
//A const defined in the top-level build.gradle file
apply from: PLUGIN_FAIRY_SCRIPT

android {
    compileSdkVersion 27
    buildToolsVersion "27.0.1"

    defaultConfig {
        applicationId "com.example.plugintestbase"
        minSdkVersion 14
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
        textReport false
        htmlReport false
        xmlReport false
    }
}

dependencies {
    //支持使用maven坐标配置
    baselinePatch files(project(':Samples:PluginMain').getBuildDir().absolutePath + '/distributions/host.bar')
}

tasks.whenTaskAdded { task ->
    android.buildTypes.all { buildType ->
        if (task.name.equalsIgnoreCase("compile" + buildType.name + "Sources")) {
            task.doLast {
                println '导出 ' + buildType.name + ' jar包到build/outputs/apk目录'
                tasks.getByName("bundleAppClasses" + buildType.name.substring(0, 1).toUpperCase()+ buildType.name.replaceFirst("\\w","")).execute()
                project.copy {
                    from(buildDir.absolutePath + '/intermediates/classes-jar/' + buildType.name) {
                        include "classes.jar"
                    }
                    into(buildDir.absolutePath + "/outputs/apk")
                    rename('classes', project.name + "-" + buildType.name)
                }
            }
        }
    }
}


afterEvaluate {
    tasks.getByName("packageDebug").doLast {
        copy {
            println "复制插件" + apkPathList.get(0).absolutePath + "到宿主assets目录"
            from apkPathList.get(0).getParent()
            include project.name + '-debug.apk'
            into(project(':Samples:PluginMain').getProjectDir().absolutePath + '/src/main/assets/')
        }
    }
}